(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{321:function(t,a,e){"use strict";e.r(a);var s=e(14),v=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"集合的定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集合的定义"}},[t._v("#")]),t._v(" 集合的定义")]),t._v(" "),a("p",[t._v("集合是一个无序的不重复元素序列，常用来对两个列表进行交并差的处理。和列表一样，支持所有数据类型。")]),t._v(" "),a("h1",{attrs:{id:"集合与列表的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集合与列表的区别"}},[t._v("#")]),t._v(" 集合与列表的区别")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("功能")]),t._v(" "),a("th",[t._v("列表")]),t._v(" "),a("th",[t._v("集合")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("顺序")]),t._v(" "),a("td",[t._v("有序")]),t._v(" "),a("td",[t._v("无序")])]),t._v(" "),a("tr",[a("td",[t._v("内容")]),t._v(" "),a("td",[t._v("可重复")]),t._v(" "),a("td",[t._v("不可重复")])]),t._v(" "),a("tr",[a("td",[t._v("功能")]),t._v(" "),a("td",[t._v("用于数据的使用")]),t._v(" "),a("td",[t._v("用于数据的交集并集差集的获取")])]),t._v(" "),a("tr",[a("td",[t._v("索引")]),t._v(" "),a("td",[t._v("有索引")]),t._v(" "),a("td",[t._v("无索引")])]),t._v(" "),a("tr",[a("td",[t._v("符号")]),t._v(" "),a("td",[t._v("[]")]),t._v(" "),a("td",[t._v("{}")])])])]),t._v(" "),a("h1",{attrs:{id:"集合的创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集合的创建"}},[t._v("#")]),t._v(" 集合的创建")]),t._v(" "),a("p",[t._v("通过 set 函数来创建集合，不能使用 {} 来创建空集合。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("a = set()\nb = set([1,2,3]) # 把列表中的成员放到集合里\nc = {1,2,3}\nd = {} # 字典来着\n")])])]),a("h1",{attrs:{id:"集合的增删改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集合的增删改"}},[t._v("#")]),t._v(" 集合的增删改")]),t._v(" "),a("ul",[a("li",[t._v("add")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("set.add(item)\n")])])]),a("ul",[a("li",[t._v("update")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 参数类型 集合，列表，元组，字符串\nset.update(iterable)\n")])])]),a("ul",[a("li",[t._v("remove 将集合中的某个元素进行删除")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("set.remove(item)\n")])])]),a("ul",[a("li",[t._v("clear 清空集合中的所有元素")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("set.clear()\n")])])]),a("ul",[a("li",[t._v("del")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("del set\n")])])]),a("h1",{attrs:{id:"两个集合的操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两个集合的操作"}},[t._v("#")]),t._v(" 两个集合的操作")]),t._v(" "),a("ul",[a("li",[t._v("差集")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("a_set.difference(b_set)\n")])])]),a("ul",[a("li",[t._v("交集")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("a_set.intersection(b_set)\n")])])]),a("ul",[a("li",[t._v("并集")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("a_set.union(b_set)\n")])])]),a("ul",[a("li",[t._v("符号操作")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("符号")]),t._v(" "),a("th",[t._v("函数")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("&")]),t._v(" "),a("td",[t._v("set1.intersection(set2)求set1和set2的交集")])]),t._v(" "),a("tr",[a("td",[t._v("|")]),t._v(" "),a("td",[t._v("set1.union(set2) 求set1和set2的并集")])]),t._v(" "),a("tr",[a("td",[t._v("-")]),t._v(" "),a("td",[t._v("set1.difference(set2) 求set1和set2的差集")])]),t._v(" "),a("tr",[a("td",[t._v("^")]),t._v(" "),a("td",[t._v("set1.symmetric_difference(set2) 求set1和set2的交叉补集")])])])]),t._v(" "),a("h1",{attrs:{id:"判断两个集合中是否有相同的元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断两个集合中是否有相同的元素"}},[t._v("#")]),t._v(" 判断两个集合中是否有相同的元素")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("a_set.isdisjoint(b_set)\n")])])])])}),[],!1,null,null,null);a.default=v.exports}}]);