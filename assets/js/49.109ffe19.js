(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{322:function(t,s,a){"use strict";a.r(s);var n=a(14),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"函数和模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数和模块"}},[t._v("#")]),t._v(" 函数和模块")]),t._v(" "),s("blockquote",[s("p",[t._v("代码有很多种坏味道，重复是最坏的一种。")])]),t._v(" "),s("p",[t._v("要写出高质量的代码首先要解决的就是重复代码的问题。")]),t._v(" "),s("h3",{attrs:{id:"函数相关"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数相关"}},[t._v("#")]),t._v(" 函数相关")]),t._v(" "),s("h4",{attrs:{id:"函数的定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数的定义"}},[t._v("#")]),t._v(" 函数的定义")]),t._v(" "),s("p",[t._v("在 python 中，使用关键字 "),s("code",[t._v("def")]),t._v(" 定义函数。它由函数名，参数，函数主题组成。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("每一个函数都有一个响亮的名字，但通常和变量名一样，见名识意。")])]),t._v(" "),s("li",[s("p",[t._v("函数的参数叫形参")])]),t._v(" "),s("li",[s("p",[t._v("函数一般通过 "),s("code",[t._v("return")]),t._v(" 关键字返回一个值。")])])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("greet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""这个函数会打印一条包含传入名字的问候语。"""')]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"Hello, ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('!"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n  \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 调用函数  ")]),t._v("\ngreet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"World"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出: Hello, World!  ")]),t._v("\ngreet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Python"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出: Hello, Python!")]),t._v("\n\n")])])]),s("p",[t._v("函数定义后面的三引号括起来的内容是函数的文档字符串，用于解释函数的功能和用法。")]),t._v(" "),s("h4",{attrs:{id:"函数的参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数的参数"}},[t._v("#")]),t._v(" 函数的参数")]),t._v(" "),s("p",[t._v("在 python 中，参数是函数定义中的一部分，用于接收传递给函数的值，参数定义了函数期望接收的数据类型和数量。当你调用函数时，传递给函数的值成为实参。")]),t._v(" "),s("h5",{attrs:{id:"参数的类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参数的类型"}},[t._v("#")]),t._v(" 参数的类型")]),t._v(" "),s("ul",[s("li",[t._v("位置参数：数定义中的参数按照从左到右的顺序排列，并在调用函数时按照同样的顺序传递值。")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("greet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"Hello, ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(". You are ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(' years old."')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n  \ngreet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Alice"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 正确调用，按照位置传递参数")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[t._v("关键字参数：在调用函数时，你可以通过参数名（关键字）来指定参数的值。这允许你以任意顺序传递参数，只要确保每个参数名都与其对应的值匹配。")])]),t._v(" "),s("li",[s("p",[t._v("默认参数：在函数定义中，可以为参数指定默认值。如果调用函数时没有提供该参数的值，则使用默认值。")])]),t._v(" "),s("li",[s("p",[t._v("可变位置参数：使用 "),s("code",[t._v("*args")]),t._v(" 语法，可以允许函数接收任意数量的位置参数，并将它们作为元组处理。")])])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print_numbers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("numbers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" numbers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  \n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n  \nprint_numbers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出 1 2 3 4")]),t._v("\n\n")])])]),s("ul",[s("li",[t._v("可变关键字参数：使用 "),s("code",[t._v("**kwargs")]),t._v(" 语法，可以允许函数接收任意数量的关键字参数，并将它们作为字典处理。")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print_info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  \n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(": ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n  \nprint_info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Alice"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出 name: Alice 和 age: 30")]),t._v("\n")])])]),s("h3",{attrs:{id:"模块相关"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块相关"}},[t._v("#")]),t._v(" 模块相关")]),t._v(" "),s("p",[t._v("在 python 中，每个文件就代表了一个模块，模块可以定义函数，类，变量。然后这些定义可以被其他程序或模块导入和使用。模块是组织代码的一种方式，有助于代码重用，避免命名冲突，提高代码的可维护性。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("代码重用：其他程序可以通过关键字 "),s("code",[t._v("import")]),t._v(" 来导入模块中的函数，类或者变量。")])]),t._v(" "),s("li",[s("p",[t._v("命名空间：有助于避免命名冲突。")])]),t._v(" "),s("li",[s("p",[t._v("组织代码：将相关的代码组织在一起，易于阅读和维护。")])]),t._v(" "),s("li",[s("p",[t._v("可扩展性：方便添加新功能，并在需要的时候导入到主程序即可。")])]),t._v(" "),s("li",[s("p",[t._v("导入方式：可以使用关键字 "),s("code",[t._v("import")]),t._v(" 导入整个模块，使用 "),s("code",[t._v("from ... import ...")]),t._v(" 语句导入模块中的特定函数，类，或者变量。")])])]),t._v(" "),s("h4",{attrs:{id:"导入方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#导入方式"}},[t._v("#")]),t._v(" 导入方式")]),t._v(" "),s("p",[t._v("1、导入整个模块")]),t._v(" "),s("p",[t._v("使用模块中的函数时，需要加上模块名作为前缀。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" math\n\nresult "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sqrt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("2、从模块中导入特定的函数或者变量")]),t._v(" "),s("p",[t._v("在使用时，直接使用函数名，不需要加模块名前缀")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" math "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" sqrt\n\nresult "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sqrt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("3、从模块中导入多个特定的函数或变量")]),t._v(" "),s("p",[t._v("在使用时，直接使用函数名，不需要加模块名前缀")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" math "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" sqrt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("pow")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 直接使用函数名  ")]),t._v("\nresult1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sqrt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \nresult2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("pow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出: 4.0  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出: 8.0")]),t._v("\n")])])]),s("p",[t._v("4、导入模块并使用别名 "),s("code",[t._v("as")]),t._v(" 关键字")]),t._v(" "),s("p",[t._v("使用别名作为模块名前缀")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" math "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" m  \n  \nresult "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sqrt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出: 4.0")]),t._v("\n")])])]),s("p",[t._v("5、从模块中导入所有内容（通常不推荐，因为可能导致命名冲突）")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" math "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n\nresult1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sqrt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出: 4.0  ")]),t._v("\n")])])]),s("p",[s("strong",[t._v("尽管使用 "),s("code",[t._v("from module import *")]),t._v(" 可以避免在代码中频繁地写模块名前缀，但这通常不是一个好的编程习惯，因为它可能会导致命名冲突和难以追踪的依赖关系。在大型项目中，最好明确地从模块中导入你需要的函数或变量。")])]),t._v(" "),s("p",[t._v("另外，如果导入的模块除了定义函数之外，还有可执行的代码，那么 python 解释器在导入这个模块时就会执行这些代码，如果想要在导入模块的时候不执行这些代码，可以在模块中将这些执行代码放到入口中：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'__main__'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n")])])]),s("h4",{attrs:{id:"变量的作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量的作用域"}},[t._v("#")]),t._v(" 变量的作用域")]),t._v(" "),s("h5",{attrs:{id:"局部作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#局部作用域"}},[t._v("#")]),t._v(" 局部作用域")]),t._v(" "),s("p",[t._v("在函数或方法内部定义的变量具有局部作用域。这意味着这些变量只能在函数或方法内部被访问。")]),t._v(" "),s("p",[t._v("当函数或方法执行完毕后，这些变量就会被销毁（除非它们被作为返回值或通过某种方式传递到外部作用域）。")]),t._v(" "),s("h5",{attrs:{id:"嵌套作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#嵌套作用域"}},[t._v("#")]),t._v(" 嵌套作用域")]),t._v(" "),s("p",[t._v("如果一个函数内部定义了另一个函数，那么内部函数可以访问外部函数的变量（除了那些被标记为nonlocal或global的）。")]),t._v(" "),s("h5",{attrs:{id:"全局作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局作用域"}},[t._v("#")]),t._v(" 全局作用域")]),t._v(" "),s("p",[t._v("在所有函数和方法之外定义的变量具有全局作用域。这意味着这些变量可以在整个程序中被访问。")]),t._v(" "),s("p",[t._v("在函数内部，你可以通过global关键字来声明一个变量是全局的，从而可以在函数内部修改它。")]),t._v(" "),s("h5",{attrs:{id:"内置作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内置作用域"}},[t._v("#")]),t._v(" 内置作用域")]),t._v(" "),s("p",[t._v("内置作用域是Python解释器在启动时创建的，它包含了所有内置函数和异常的名字。")]),t._v(" "),s("p",[t._v("我们不能在这个作用域中定义新的变量，也不能删除这个作用域中的变量。")]),t._v(" "),s("p",[t._v("例如，len(), int(), True, False, 和 None 等都是内置作用域中的变量。")])])}),[],!1,null,null,null);s.default=r.exports}}]);