(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{290:function(_,v,a){"use strict";a.r(v);var t=a(14),e=Object(t.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"开发规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#开发规范"}},[_._v("#")]),_._v(" 开发规范")]),_._v(" "),v("h2",{attrs:{id:"项目规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#项目规范"}},[_._v("#")]),_._v(" 项目规范")]),_._v(" "),v("h3",{attrs:{id:"开发和线上环境"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#开发和线上环境"}},[_._v("#")]),_._v(" 开发和线上环境")]),_._v(" "),v("p",[_._v("一般情况下，一个项目应该有三个基本的项目环境：")]),_._v(" "),v("ul",[v("li",[_._v("Local - 开发环境")])]),_._v(" "),v("p",[_._v("统一使用域名 "),v("code",[_._v(".test")]),_._v(" 作为后缀。")]),_._v(" "),v("ul",[v("li",[_._v("Staging - 线上测试环境")])]),_._v(" "),v("p",[_._v("统一使用域名 "),v("code",[_._v(".stage.xxx")]),_._v(" 作为后缀。")]),_._v(" "),v("p",[_._v("除了域名等其他独立应用配置以外，环境必须跟 Production 保持高度一致性，可以的话应该与 Production 使用同一台机器。")]),_._v(" "),v("ul",[v("li",[_._v("Production - 线上生产环境")])]),_._v(" "),v("p",[_._v("出于安全考虑，线上环境 必须 只开放以下端口：")]),_._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[_._v("- 80 HTTP\n\n- 443 HTTPS\n\n- 22 SSH\n")])])]),v("h3",{attrs:{id:"工具统一"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#工具统一"}},[_._v("#")]),_._v(" 工具统一")]),_._v(" "),v("p",[_._v("工具统一，为了方便工作流的统一，还有工具使用经验的传承。")]),_._v(" "),v("ul",[v("li",[_._v("硬件系统")]),_._v(" "),v("li",[_._v("编辑器")]),_._v(" "),v("li",[_._v("编辑器代码格式化 "),v("a",{attrs:{href:"https://editorconfig.org/",target:"_blank",rel:"noopener noreferrer"}},[_._v("EditorConfig"),v("OutboundLink")],1)]),_._v(" "),v("li",[_._v("PHP 代码风格矫正器 "),v("a",{attrs:{href:"https://github.com/PHP-CS-Fixer/PHP-CS-Fixer",target:"_blank",rel:"noopener noreferrer"}},[_._v("PHP-CS-Fixer"),v("OutboundLink")],1)]),_._v(" "),v("li",[_._v("命令行工具 例如：xshell 、git for windows")]),_._v(" "),v("li",[_._v("浏览器")]),_._v(" "),v("li",[_._v("虚拟机")]),_._v(" "),v("li",[_._v("Mysql 数据库查询工具")]),_._v(" "),v("li",[_._v("Redis 管理工具")]),_._v(" "),v("li",[_._v("MongoDB 管理工具")]),_._v(" "),v("li",[_._v("设计工具")]),_._v(" "),v("li",[_._v("视频播放")]),_._v(" "),v("li",[_._v("zsh 的配置信息统一，Alias 等信息")])]),_._v(" "),v("h3",{attrs:{id:"项目文档编写规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#项目文档编写规范"}},[_._v("#")]),_._v(" 项目文档编写规范")]),_._v(" "),v("p",[_._v("每一个项目必须包含一个 README.md 文件，主要简单介绍该项目，作用主要有两个：一是团队新成员可以从此文件快速获悉项目大致情况，另一个是部署项目时可以做为参考。")]),_._v(" "),v("p",[v("code",[_._v("readme.md")]),_._v(" 文件应该包含以下内容：")]),_._v(" "),v("ul",[v("li",[_._v("项目概述：介绍说明项目的一些情况，例如产品说明，功能描述，相关链接等等")]),_._v(" "),v("li",[_._v("运行环境：运行环境说明，系统要求等信息")]),_._v(" "),v("li",[_._v("开发环境部署：一步步引导说明，保证新成员能最快速的，没有歧义的部署好开发环境")]),_._v(" "),v("li",[_._v("服务器架构说明：最好能有服务器架构图，包含前端和后端运行环境等")]),_._v(" "),v("li",[_._v("代码上线：介绍代码上线流程，需要执行那些步骤")]),_._v(" "),v("li",[_._v("扩展包说明：表格列出所有使用的扩展包，以及标注那些业务使用了相关扩展包")]),_._v(" "),v("li",[_._v("自定义 Artisan 命令列表：以表格的形式罗列出所有自定义的命令，说明用途和使用场景")]),_._v(" "),v("li",[_._v("队列列表：以表格的形式罗列出所有的队列接口，说明用途，指出使用场景")]),_._v(" "),v("li",[_._v("常见问题：如果遇到了什么问题，如何解决的问题")])]),_._v(" "),v("h3",{attrs:{id:"composer-使用须知"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#composer-使用须知"}},[_._v("#")]),_._v(" Composer 使用须知")]),_._v(" "),v("p",[_._v("一些扩展包的注册会对应用造成消耗，有一些扩展包事开发环境中专用，生产环境中并不会使用到，为了避免无用的负载，必须严格控制其安装和加载。")]),_._v(" "),v("p",[_._v("安装开发专用扩展包时，必须使用 "),v("code",[_._v("--dev")]),_._v(" 参数")]),_._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[_._v("composer require ext-name --dev\n")])])]),v("p",[_._v("在 Production 和 Staging 环境，必须使用以下命令来安装")]),_._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[_._v("composer require --no-dev\n")])])]),v("h3",{attrs:{id:"静态资源"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#静态资源"}},[_._v("#")]),_._v(" 静态资源")]),_._v(" "),v("p",[_._v("一般我们将 css,js,font,image 等称为静态资源，这些静态资源使用 cdn 加载，用户上传的静态资源应该酌情处理。")]),_._v(" "),v("p",[_._v("如果项目中使用了第三方前端类库中的 css/js/fonts/image 等静态资源，绝不使用第三方链接进行加载，必须下载下来并纳入代码版本管理器中。")]),_._v(" "),v("p",[_._v("css,js 文件应该使用独立的文件进行加载，不应该直接写在页面中，并且控制数量为 2~3 个文件。")]),_._v(" "),v("h2",{attrs:{id:"开发规范-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#开发规范-2"}},[_._v("#")]),_._v(" 开发规范")]),_._v(" "),v("h3",{attrs:{id:"控制器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#控制器"}},[_._v("#")]),_._v(" 控制器")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("控制器必须优先使用 Restful 资源控制器")])]),_._v(" "),v("li",[v("p",[_._v("必须使用复数形式")])]),_._v(" "),v("li",[v("p",[_._v("控制器里应该只存放路由动作方法")])]),_._v(" "),v("li",[v("p",[_._v("保持短小精悍，必须保持控制其文件代码行数最小化，还有可读性，一般来讲，一个方法不应该超过20行代码，业务逻辑比较多，请封装到一个 Service 类里。")])]),_._v(" "),v("li",[v("p",[_._v("绝不在控制器里遗留死方法（没有用的方法）")])]),_._v(" "),v("li",[v("p",[_._v("不应该在控制器中书写私有方法，多余的业务逻辑，请封装到 Service 类中")])]),_._v(" "),v("li",[v("p",[_._v("方法注释，每个方法都需要有详细的注释说明（要求方法取名合理，不需要过多解释），包括参数和返回值。但要为一些复杂的逻辑代码块书写注释，结合上下文，解释为什么这么做。")]),_._v(" "),v("p",[_._v("请注意，@param 属性后跟两个空格、参数类型、两个空格，最后是变量名称：")]),_._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[_._v("/**\n* 注册一个绑定到容器。\n*\n* @param  string|array  $abstract\n* @param  \\Closure|string|null  $concrete\n* @param  bool  $shared\n* @return void\n*/\npublic function bind($abstract, $concrete = null, $shared = false)\n{\n    //\n}\n")])])])]),_._v(" "),v("li",[v("p",[_._v("绝不在控制器里批量注释掉代码，没有用直接删掉，反正有 Git 来做版本控制")])])]),_._v(" "),v("h3",{attrs:{id:"视图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#视图"}},[_._v("#")]),_._v(" 视图")]),_._v(" "),v("p",[_._v("避免在 "),v("code",[_._v("resources/views")]),_._v(" 目录下直接放置视图文件")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("统一布局，相似的页面，局部视图，必须使用 layouts 文件来统一页面头部与尾部")])]),_._v(" "),v("li",[v("p",[_._v("优先使用 "),v("code",[_._v("blade")]),_._v(" 模板引擎")])]),_._v(" "),v("li",[v("p",[_._v("保持目录清晰，蛇形小写复数命名形式")]),_._v(" "),v("ul",[v("li",[_._v("layouts 存放布局文件")]),_._v(" "),v("li",[_._v("common 存放页面通用元素")]),_._v(" "),v("li",[_._v("components 存放组件")]),_._v(" "),v("li",[_._v("pages 存放简单的页面")]),_._v(" "),v("li",[_._v("partials 存放部分模板片段")]),_._v(" "),v("li",[_._v("resources 对应资源路由名称")])])]),_._v(" "),v("li",[v("p",[_._v("局部视图文件必须使用 "),v("code",[_._v("_")]),_._v(" 前缀来命名")])]),_._v(" "),v("li",[v("p",[_._v("视图命名要释义,例如 index create show edit")])]),_._v(" "),v("li",[v("p",[_._v("共用 "),v("code",[_._v("_form.blade.php")]),_._v(" 视图，在很多情况下，创建和编辑视图页面结构相似，应该避免重复代码")])])]),_._v(" "),v("h3",{attrs:{id:"模型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#模型"}},[_._v("#")]),_._v(" 模型")]),_._v(" "),v("h4",{attrs:{id:"命名规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#命名规范"}},[_._v("#")]),_._v(" 命名规范")]),_._v(" "),v("p",[_._v("数据模型相关的命名规范：")]),_._v(" "),v("ul",[v("li",[_._v("数据模型类名 必须 为「单数」, 如：App\\Models\\Photo")]),_._v(" "),v("li",[_._v("类文件名 必须 为「单数」，如：app/Models/Photo.php")]),_._v(" "),v("li",[_._v("数据库表名字 必须 为「复数」，多个单词情况下使用「Snake Case」 如：photos, my_photos")]),_._v(" "),v("li",[_._v("数据库表迁移名字 必须 为「复数」，如：2014_08_08_234417_create_photos_table.php")]),_._v(" "),v("li",[_._v("数据填充文件名 必须 为「复数」，如：PhotosTableSeeder.php")]),_._v(" "),v("li",[_._v("数据库字段名 必须 为「Snake Case」，如：view_count, is_vip")]),_._v(" "),v("li",[_._v("数据库表主键 必须 为「id」")]),_._v(" "),v("li",[_._v("数据库表外键 必须 为「resource_id」，如：user_id, post_id")]),_._v(" "),v("li",[_._v("数据模型变量 必须 为「resource_id」，如：$user_id, $post_id")])]),_._v(" "),v("p",[_._v("总的来讲，就是只有表名和数据填充文件是复数，其他情况都是单数。")]),_._v(" "),v("h4",{attrs:{id:"利用-trait-来扩展数据模型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#利用-trait-来扩展数据模型"}},[_._v("#")]),_._v(" 利用 trait 来扩展数据模型")]),_._v(" "),v("p",[_._v("模型之间，相同的模型逻辑，应该 利用 Trait 来实现逻辑代码。所有模型 Traits 必须存放于 app/Models/Traits 目录下。业务逻辑请使用 ModelService 模式来组织代码。")]),_._v(" "),v("h4",{attrs:{id:"关于-sql-文件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#关于-sql-文件"}},[_._v("#")]),_._v(" 关于 sql 文件")]),_._v(" "),v("p",[_._v("强烈建议使用数据迁移，比如创建数据库表，更改字段，创建索引，测试数据等行为。")]),_._v(" "),v("h4",{attrs:{id:"数据层无状态"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据层无状态"}},[_._v("#")]),_._v(" 数据层无状态")]),_._v(" "),v("p",[_._v("数据层，也就是模型层，不能跟用户的登录状态挂钩")]),_._v(" "),v("h4",{attrs:{id:"目录分层"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#目录分层"}},[_._v("#")]),_._v(" 目录分层")]),_._v(" "),v("p",[_._v("如果是一个长期维护的项目，必须为模型文件按业务逻辑分层")]),_._v(" "),v("h4",{attrs:{id:"模型事件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#模型事件"}},[_._v("#")]),_._v(" 模型事件")]),_._v(" "),v("p",[_._v("应该尽量避免使用 laravel 的模型事件，使用模型事件的问题在于，其职能很难界定，所有的业务逻辑都能写到模型事件中。模型事件另一个缺点就是，模型操作，附带太多逻辑，有太多的 Side Effect，并且是隐性的。")]),_._v(" "),v("h3",{attrs:{id:"表单验证"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#表单验证"}},[_._v("#")]),_._v(" 表单验证")]),_._v(" "),v("p",[_._v("必须使用表单请求类来处理控制器里的表单验证")]),_._v(" "),v("p",[_._v("绝不使用 "),v("code",[_._v("authorize()")]),_._v(" 方法来做用户授权，用户授权单独使用授权策略来实现")]),_._v(" "),v("p",[_._v("所有 FormRequest 表验证类必须继承 app/Http/Requests/Request.php 基类。")]),_._v(" "),v("p",[_._v("FormRequest 表验证类命名必须按照控制器方法来命名，且必须添加模型的前缀，类名称的 Request 后缀也是必须的。")])])}),[],!1,null,null,null);v.default=e.exports}}]);