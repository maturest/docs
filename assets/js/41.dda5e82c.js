(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{314:function(t,a,s){"use strict";s.r(a);var e=s(14),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"solid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#solid"}},[t._v("#")]),t._v(" SOLID")]),t._v(" "),a("h3",{attrs:{id:"单一职责原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单一职责原则"}},[t._v("#")]),t._v(" 单一职责原则")]),t._v(" "),a("blockquote",[a("p",[t._v("一个类应该只有一个责任，即一个类应该有且仅有一个引起它变化的原因。如果一个类具有多项职责，则会增加出现错误的可能性，因为对其中一项职责进行更改可能会在您不知情的情况下影响其他职责。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic.imgdb.cn/item/667e902cd9c307b7e9a2b04d.webp",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"开放封闭原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开放封闭原则"}},[t._v("#")]),t._v(" 开放封闭原则")]),t._v(" "),a("blockquote",[a("p",[t._v("类应该对扩展开放，但对修改关闭，简单来说，就是应该尽量在不修改原有代码的情况下，通过扩展来实现新的功能需求。这样可以防止对现有功能的破坏，保证系统的稳定性和可靠性。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic.imgdb.cn/item/667e90a1d9c307b7e9a374c9.webp",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"里氏替换原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#里氏替换原则"}},[t._v("#")]),t._v(" 里氏替换原则")]),t._v(" "),a("blockquote",[a("p",[t._v("里氏替换原则指出：子类对象应该能够替换其父类对象而不影响程序的正确性，也就是说如果 S 是 T 的子类型，那么程序中类型 T 的对象可以被类型 S 的对象替换，程序的行为不应该受到影响，即程序应该继续按照预期工作。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic.imgdb.cn/item/667e90bfd9c307b7e9a3af89.webp",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"接口隔离原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#接口隔离原则"}},[t._v("#")]),t._v(" 接口隔离原则")]),t._v(" "),a("blockquote",[a("p",[t._v("接口隔离原则指出客户端不应该依赖于它不需要的接口。简单来说，接口隔离原则要求将大接口拆分成多个小接口，以便客户端只需知道它们所需的方法，而不需要知道不必要的方法。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic.imgdb.cn/item/667e9109d9c307b7e9a43898.webp",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"依赖倒置原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#依赖倒置原则"}},[t._v("#")]),t._v(" 依赖倒置原则")]),t._v(" "),a("blockquote",[a("p",[t._v("依赖倒置原则的核心思想是高层模块不应该依赖于低层模块，二者都应该依赖于抽象；而且抽象不应该依赖于细节，细节应该依赖于抽象，这意味着系统的设计应该基于接口和抽象类，而不是具体的实现类。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic.imgdb.cn/item/667e9070d9c307b7e9a31da2.webp",alt:""}})])])}),[],!1,null,null,null);a.default=r.exports}}]);